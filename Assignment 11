//11.Create two classes named Mammals and MarineAnimals. Create another class named
BlueWhale
//which inherits both the above classes. Now, create a function in each of these classes
which prints &quot;I
//am mammal&quot;, &quot;I am a marine animal&quot; and &quot;I belong to both the categories: Mammals as
well as
//Marine Animals&quot; respectively. Now, create an object for each of the above class and try
calling
//1 - function of Mammals by the object of Mammal
//2 - function of MarineAnimal by the object of MarineAnimal
//3 - function of BlueWhale by the object of BlueWhale
//4 - function of each of its parent by the object of BlueWhale

#include &lt;iostream&gt;
using namespace std;

class Mammals {
public:
void mammalFunc() {
cout &lt;&lt; &quot;hello I am a mammal&quot; &lt;&lt; endl;
}
};

class MarineAnimals {
public:
void marineFunc() {
cout &lt;&lt; &quot;hello I am a marine animal&quot; &lt;&lt; endl;
}
};

class BlueWhale : public Mammals, public MarineAnimals {
public:
void blueWhale() {
cout &lt;&lt; &quot;I belong to both the categories Mammals as well as Marine Animals&quot; &lt;&lt; endl;
}
};

int main() {
Mammals m;
MarineAnimals a;
BlueWhale b;

m.mammalFunc();
a.marineFunc();
b.blueWhale();
b.mammalFunc();
b.marineFunc();

return 0;
}
Output
hello I am a mammal
hello I am a marine animal
I belong to both the categories Mammals as well as Marine Animals
hello I am a mammal
hello I am a marine animal

=== Code Execution Successful ===
